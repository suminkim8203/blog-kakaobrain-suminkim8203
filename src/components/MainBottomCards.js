import { useEffect, useRef, useState } from "react";
import MainBottomCardsItem from "./MainBottomCardsItem";
import { getCards, getNews } from "../apis/api";
// Swiper ÌôúÏö©
import { Swiper, SwiperSlide } from "swiper/react";
import "swiper/css";
// Swiper Î•º Ïã§ÏãúÍ∞ÑÏúºÎ°ú ÏÉùÏÑ±, ÏÇ≠Ï†úÌïòÎäî Í≤ΩÏö∞ ÌôúÏö©
import SwiperInit from "swiper";

const MainBottomCards = () => {
  // swiper Î•º Î≥¥Í¥ÄÌï¥ ÎëêÍ≥† ÌôîÎ©¥ ÏÇ¨Ïù¥Ï¶àÏóê Îî∞ÎùºÏÑú ÎßåÎì§Í≥†, ÏßÄÏö∞Í≥†
  const cardSlide = useRef(null);
  const [cardList, setCardList] = useState([]);
  // swiper ÏòµÏÖò
  const swiperOption = {
    spaceBetween: 20,
    slidesPerView: 4,
    onInit: swiper => {
      cardSlide.current = swiper;
    },
  };

  const makeCardSlide = () => {
    const wWidth = window.innerWidth;
    if (wWidth > 1024) {
      // swiper Î•º Ï†úÍ±∞
      // Î¶¨Ïï°Ìä∏ swiper ÏóêÏÑúÎäî destroyed ÏÜçÏÑ±Ïù¥ ÏûàÏñ¥Ïöî.
      if (cardSlide.current) {
        // swiper Î•º Ï†úÍ±∞ÌïòÎäî ÏΩîÎìú
        cardSlide.current.destroy();
      }
    } else {
      // swiper Î•º ÏÉùÏÑ±ÌïúÎã§.
      // swiper ÏûëÎèôÏãúÌÇ§Í∏∞(Î™®Î∞îÏùºÏóêÏÑúÎßå ÏûëÎèôÌï¥ÏïºÌï®)
      // cardSlide.current?.destroyed Ï∞∏Ïù¥Î©¥..
      if (cardSlide.current?.destroyed) {
        // Swiper Î•º Ïã§ÏãúÍ∞Ñ ÎßåÎì§Í∏∞
        cardSlide.current = new SwiperInit(".cardslide", swiperOption);
      }
    }
  };

  // ÌôîÎ©¥Ïùò Î¶¨ÏÇ¨Ïù¥Ï¶àÏóê Îî∞Î•∏ Ïä¨ÎùºÏù¥Îìú Î≥ÄÍ≤Ω ÏΩîÎìú
  // cardSlide ÏÉÅÌÉúÍ∞Ä Î∞îÎÄúÏùÑ Ï≤¥ÌÅ¨ÌïúÎã§.
  useEffect(() => {
    window.addEventListener("resize", makeCardSlide);
    return () => {
      window.removeEventListener("resize", makeCardSlide);
    };
  }, [cardSlide]);

  const getCardsCall = async () => {
    const result = await getCards();
    setCardList(result);
    makeCardSlide();
  };
  useEffect(() => {
    // axiso Ìò∏Ï∂ú Ï°∞Ïã¨ÌïòÏûê. await ÌïÑÏöî
    getCardsCall();

    return () => {};
  }, []);

  return (
    <div className="main-bottom-cards">
      <h2>Ìè¥Îçî üìÅ</h2>
      {/* <!-- Ïπ¥Îìú Ïä¨ÎùºÏù¥Îìú --> */}
      <div className="main-bottom-cards-slide">
        <Swiper className="cardslide" {...swiperOption}>
          {cardList.map((item, index) => (
            <SwiperSlide key={index}>
              <MainBottomCardsItem
                link={item.link}
                imgpath={item.imgpath}
                cardname={item.cardname}
                cardno={item.cardno}
              ></MainBottomCardsItem>
            </SwiperSlide>
          ))}
        </Swiper>
      </div>

      <div className="bt-wrap">
        <a href="#" className="bt-more">
          Ï†ÑÏ≤¥Î≥¥Í∏∞
        </a>
      </div>
    </div>
  );
};

export default MainBottomCards;
